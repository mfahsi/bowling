openapi: 3.0.1
info:
  title: Bowling API
  version: "1.0"
paths:
  /api/game:
    post:
      summary: Create a new game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameRequest'
      responses:
        '201':
          description: Game created successfully
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: ID of the created game
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/game/{id}:
    put:
      summary: Update a game
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the game to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BowlingGameInfo'
      responses:
        '200':
          description: Game updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BowlingGameInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'

    get:
      summary: Get a game by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the game to retrieve
      responses:
        '200':
          description: Game retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BowlingGameInfo'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/game/{id}/roll:
    put:
      summary: Add a roll to a game
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the game to add a roll to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollInfo'
      responses:
        '200':
          description: Roll added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BowlingGameInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/game/{id}/score:
    get:
      summary: Get the score for a game
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the game to get the score for
      responses:
        '200':
          description: Score retrieved successfully
          content:
            application/json:
              schema:
                type: integer
                format: int32
                description: Score for the game
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'

    /api/game/{id}:
      delete:
        summary: Delete a game by ID
        parameters:
          - in: path
            name: id
            schema:
              type: integer
              format: int64
            required: true
            description: ID of the game to delete
        responses:
          '200':
            description: Game deleted successfully
          '404':
            $ref: '#/components/responses/NotFound'

  components:
    schemas:
      CreateGameRequest:
        type: object
        properties:
          game:
            $ref: '#/components/schemas/BowlingGameInfo'
          uid:
            type: string
            format: uuid
            nullable: true

      BowlingGameInfo:
        type: object
        properties:
          id:
            type: integer
            format: int64
            nullable: true
          frames:
            type: array
            items:
              $ref: '#/components/schemas/FrameInfo'
          player:
            type: string
            nullable: true
          lane:
            type: string
            nullable: true
          gameSet:
            type: integer
            format: int64
            nullable: true

      FrameInfo:
        type: object
        properties:
          rolls:
            type: array
            items:
              $ref: '#/components/schemas/RollInfo'

      RollInfo:
        type: object
        properties:
          pins:
            type: integer
            format: int32
          marker:
            type: string
            nullable: true
          uid:
            type: string
            format: uuid
            nullable: true

    responses:
      BadRequest:
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLayerError'

      NotFound:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLayerError'

    ApiLayerError:
      type: object
      properties:
        error:
          type: string
        ref:
          type: string
          nullable: true
